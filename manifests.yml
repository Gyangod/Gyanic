apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2019-12-02T10:45:28Z"
  generation: 2
  labels:
    app: gyangodgyanic
  name: gyangodgyanic
  namespace: kube-public
  resourceVersion: "1158696"
  selfLink: /apis/apps/v1/namespaces/kube-public/deployments/gyangodgyanic
  uid: db03e532-14f0-11ea-970a-42010a8c0068
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: gyangodgyanic
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gyangodgyanic
    spec:
      containers:
      - image: gcr.io/gyangod-init/github.com/gyangod/gyanic:d5c9b15
        imagePullPolicy: IfNotPresent
        name: gyanic
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2019-12-02T10:45:28Z"
    lastUpdateTime: "2019-12-02T10:45:36Z"
    message: ReplicaSet "gyangodgyanic-78bdc76785" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2019-12-02T10:45:37Z"
    lastUpdateTime: "2019-12-02T10:45:37Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 2
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1